ext.libpath = file('./').absolutePath

allprojects {
    apply plugin: 'idea'

    group = 'org.boofcv'
    version = '0.17-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.6

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src'
            }
            resources {
                srcDir 'resources/src'
            }
        }

        test {
            java {
                srcDir 'test'
                srcDir 'generate'
                srcDir 'benchmark'
            }
            resources {
                srcDir 'resources/test'
            }
        }
    }

    dependencies {
//        compile files("$libpath/lib/EJML.jar")
//        compile files("$libpath/lib/DDogleg.jar")
//        compile files("$libpath/lib/GeoRegression.jar")

        compile group: 'com.googlecode.efficient-java-matrix-library', name: 'ejml', version: '0.25-SNAPSHOT'
        compile group: 'org.ddogleg', name: 'ddogleg', version: '0.5-SNAPSHOT'
        compile group: 'org.georegression', name: 'georegression', version: '0.6-SNAPSHOT'

        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile files("$libpath/lib/testing/caliper.jar")
//        testCompile group: 'com.google.caliper', name: 'caliper', version: '1.0-beta-1'
    }

    uploadArchives {
        repositories {
            flatDir {
                dirs "$libpath/repos"
            }
        }
    }
}

def javadocProjects= [
        ':main:ip',
        ':main:io',
        ':main:feature',
        ':main:geo',
        ':main:calibration',
        ':main:sfm',
        ':main:recognition',
        ':main:visualize',
        ':main:checks',

        ':integration:xuggler',
        ':integration:openkinect',
]

try {
    project(':integration:android')
    javadocProjects.add(':integration:android')
} catch( UnknownProjectException ignore ) {}
try {
    project(':integration:v4l4j')
    javadocProjects.add(':integration:v4l4j')
} catch( UnknownProjectException ignore ) {}

task alljavadoc(type: Javadoc) {
    source javadocProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(javadocProjects.collect { project(it).sourceSets.main.compileClasspath })
    destinationDir = file("${buildDir}/docs/javadoc")
    configure(options) {
        docTitle = "BoofCV JavaDoc ($project.version)"
        links = [ 'http://docs.oracle.com/javase/7/docs/api/',
                  'http://georegression.org/javadoc/',
                  'http://ddogleg.org/javadoc/']
//        header = file('misc/header.txt').text
//        bottom = file('misc/bottom.txt').text.replace("\n", "");
    }
}

idea {
    project {
        jdkName = '1.6 (64bit)'
        languageLevel = '1.6'
    }
}

// TODO insert analytics and adsense into javadoc
// TODO Publish onto maven central